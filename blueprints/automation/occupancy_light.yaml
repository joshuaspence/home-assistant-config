---
blueprint:
  name: 'Occupancy-activated Light'
  description: 'Turn lights on/off based on room occupancy.'
  domain: 'automation'
  input:
    # TODO: Allow `motion` entities as well.
    occupancy_sensor:
      name: 'Occupancy Sensor'
      selector:
        entity:
          domain: 'binary_sensor'
          device_class: 'occupancy'

    # TODO: Allow `scene` entities as well.
    light_target:
      name: 'Light'
      selector:
        entity:
          domain: 'light'

    # TODO: This input should be optional.
    illuminance_sensor:
      name: 'Illuminance Sensor'
      selector:
        entity:
          domain: 'sensor'
          device_class: 'illuminance'
    illuminance_threshold:
      name: 'Illuminance Threshold'
      default: 20
      selector:
        number:
          min: 0
          max: 1000
          step: 10
          unit_of_measurement: 'lx'

    off_delay:
      name: 'Off Delay'
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: 'seconds'

trigger:
  platform: 'state'
  entity_id: !input 'occupancy_sensor'
  from: 'off'
  to: 'on'

condition:
  - condition: 'numeric_state'
    entity_id: !input 'illuminance_sensor'
    below: !input 'illuminance_threshold'

  # If the target light is already on then it must've been turned on manually.
  - condition: 'state'
    entity_id: !input 'light_target'
    state: 'off'

action:
  - service: 'light.turn_on'
    data:
      entity_id: !input 'light_target'
  - wait_for_trigger:
      platform: 'state'
      entity_id: !input 'occupancy_sensor'
      from: 'on'
      to: 'off'
      for: !input 'off_delay'
  - service: 'light.turn_off'
    data:
      entity_id: !input 'light_target'
