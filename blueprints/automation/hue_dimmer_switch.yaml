---
blueprint:
  name: 'Hue Dimmer Switch'
  domain: 'automation'
  input:
    remote:
      name: 'Remote'
      selector:
        device:
          integration: 'mqtt'
          manufacturer: 'Philips'
          model: 'Hue dimmer switch (324131092621)'

    # TODO: Why is this needed?
    discovery_prefix:
      selector:
        text: {}

    on_press:
      name: 'On Press'
      <<: &common_config
        default: []
        selector:
          action: {}
    up_press:
      name: 'Up Press'
      <<: *common_config
    down_press:
      name: 'Down Press'
      <<: *common_config
    off_press:
      name: 'Off Press'
      <<: *common_config

trigger_variables:
  discovery_prefix: !input 'discovery_prefix'

trigger:
  - platform: 'device'
    domain: 'mqtt'
    device_id: !input 'remote'
    type: 'action'
    subtype: 'on-press'
    discovery_id: '{{ discovery_prefix ~ " action_on-press" }}'
  - platform: 'device'
    domain: 'mqtt'
    device_id: !input 'remote'
    type: 'action'
    subtype: 'up-press'
    discovery_id: '{{ discovery_prefix ~ " action_up-press" }}'
  - platform: 'device'
    domain: 'mqtt'
    device_id: !input 'remote'
    type: 'action'
    subtype: 'down-press'
    discovery_id: '{{ discovery_prefix ~ " action_down-press" }}'
  - platform: 'device'
    domain: 'mqtt'
    device_id: !input 'remote'
    type: 'action'
    subtype: 'off-press'
    discovery_id: '{{ discovery_prefix ~ " action_off-press" }}'

action:
  - choose:
      - conditions: '{{ trigger.payload == "on-press" }}'
        sequence: !input 'on_press'
      - conditions: '{{ trigger.payload == "up-press" }}'
        sequence: !input 'up_press'
      - conditions: '{{ trigger.payload == "down-press" }}'
        sequence: !input 'down_press'
      - conditions: '{{ trigger.payload == "off-press" }}'
        sequence: !input 'off_press'

mode: 'queued'
max_exceeded: 'silent'
