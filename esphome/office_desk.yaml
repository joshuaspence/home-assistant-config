---
substitutions:
  device_board: 'esp32dev'
  device_platform: 'esp32'
  device_name: 'office_desk'

  # Presets
  button_bit1_pin: '21'
  button_bit2_pin: '22'
  button_bit4_pin: '19'
  button_m_pin: '18'

packages:
  common: !include 'packages/common.yaml'
  wifi: !include 'packages/wifi.yaml'
  presets_addon: 'github://tjhorner/esphome-standing-desk/configs/addons/presets.yaml@master'

esphome:
  on_boot:
    then:
      # Wakes up the desk and reports height.
      uart.write:
        - 0x00

uart:
  baud_rate: 9600
  tx_pin: 'GPIO16'
  rx_pin: 'GPIO17'

status_led:
  pin: 'GPIO23'

external_components:
  - source: 'github://tjhorner/esphome-standing-desk@pull/3/head'

sensor:
  - platform: 'standing_desk_height'
    id: 'desk_height'
    name: 'Desk Height'
    unit_of_measurement: 'cm'
    device_class: 'distance'
    variant: 'omnidesk'

output:
  - platform: 'gpio'
    pin: 'GPIO21'
    id: 'desk_up'
    inverted: true
  - platform: 'gpio'
    pin: 'GPIO22'
    id: 'desk_down'
    inverted: true

number:
  - platform: 'template'
    id: 'target_height'
    name: 'Target Desk Height'
    unit_of_measurement: 'cm'
    device_class: 'distance'
    min_value: 70.0
    max_value: 125.0
    step: 0.1
    optimistic: true
    restore_value: true
    set_action:
      then:
        if:
          condition:
            lambda: |-
              return id(desk_height)->get_last_read() > x;
          then:
            - output.turn_on: 'desk_down'
            - wait_until:
                condition:
                  lambda: |-
                    return id(desk_height)->get_last_read() <= x + 0.4;
                timeout: '20s'
            - output.turn_off: 'desk_down'
          else:
            - output.turn_on: 'desk_up'
            - wait_until:
                condition:
                  lambda: |-
                    return id(desk_height)->get_last_read() >= x - 0.4;
                timeout: '20s'
            - output.turn_off: 'desk_up'
