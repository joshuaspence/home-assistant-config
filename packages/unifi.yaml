---
sensor:
  - platform: 'unifi_network'
    host: 'unifi.spence.network'
    port: 443
    version: 'UDMP-unifiOS'
    username: !secret 'unifi.username'
    password: !secret 'unifi.password'

# TODO: Add switch and access point sensors (see custom-components/sensor.unifigateway#9).
template:
  - sensor:
      - name: 'UniFi Gateway CPU'
        unique_id: 'b6a8b2d0-86b4-4133-b505-8a38057ce05e'
        state: '{{ states.sensor.unifi_gateway_wan.attributes["gw_system-stats"].cpu }}'
        icon: 'mdi:cpu-64-bit'
        unit_of_measurement: '%'
        <<: &wan
          availability: '{{ states.sensor.unifi_gateway_wan is not none and states.sensor.unifi_gateway_wan.attributes["gw_system-stats"] | default({}, true) | count > 0 }}'
      - name: 'UniFi Gateway Memory'
        unique_id: 'cb6a1a8a-4cc0-409e-bd76-80b670a551d4'
        state: '{{ states.sensor.unifi_gateway_wan.attributes["gw_system-stats"].mem }}'
        icon: 'mdi:memory'
        unit_of_measurement: '%'
        <<: *wan
      - name: 'UniFi Gateway Uptime'
        unique_id: '5c30f2d9-ae88-4301-a242-9c17a71611fa'
        state: '{{ now() - timedelta(seconds=states.sensor.unifi_gateway_wan.attributes["gw_system-stats"].uptime | int) }}'
        device_class: 'timestamp'
        <<: *wan

  - sensor:
      - name: 'UniFi WLAN Guests'
        unique_id: 'ad410e0b-0be3-4500-82b9-389698e2e497'
        state: '{{ states.sensor.unifi_gateway_wlan.attributes.num_guest }}'
        <<: &wlan
          availability: '{{ states.sensor.unifi_gateway_wlan is not none }}'
      - name: 'UniFi WLAN Users'
        unique_id: 'da25c64c-f7cb-4165-901d-9e3823d8de6a'
        state: '{{ states.sensor.unifi_gateway_wlan.attributes.num_user }}'
        <<: *wlan

  - sensor:
      # TODO: Use `states.sensor.unifi_gateway_wan.attributes["isp_name"]`.
      - name: 'UniFi Gateway WAN Failover'
        unique_id: 'a6d6d6e8-e159-47ca-b4c7-4f0aa90d1bac'
        availability: '{{ states.sensor.unifi_gateway_wan is not none }}'
        state: >-
          {% if "WAN" in state_attr('sensor.unifi_gateway_wan', 'uptime_stats') %}
            Primary
          {% elif "WAN2" in state_attr('sensor.unifi_gateway_wan', 'uptime_stats') %}
            Secondary
          {% else %}
            Unknown
          {% endif %}

automation:
  - alias: 'Unifi Alerts'
    id: 'e1448032-b0ca-4b23-a8b1-2c044e441426'
    trigger:
      platform: 'state'
      entity_id: 'sensor.unifi_gateway_alerts'
      not_from: 'unavailable'
      to: null
    action:
      if:
        condition: 'numeric_state'
        entity_id: 'sensor.unifi_gateway_alerts'
        below: 1
      then:
        service: 'script.mobile_app_clear_notification'
        data:
          target: 'josh_phone'
          tag: 'unifi-alert'
      else:
        service: 'script.mobile_app_notify'
        data:
          target: 'josh_phone'
          title: 'Unifi Alerts'
          subtitle: 'There are {{ trigger.to_state.state }} gateway alerts.'
          message: >-
            {% for key, value in trigger.to_state.attributes.items() -%}
            {%   if key | int(-1) != -1 -%}
            - {{ value.msg }}
            {%   endif -%}
            {% endfor %}
          channel: 'UniFi'
          persistent: true
          sticky: true
          tag: 'unifi-alert'
    mode: 'restart'

  - alias: 'Unifi Firmware Updates Available'
    id: '4dbd094b-c008-4625-b3b6-7b336954b103'
    trigger:
      platform: 'state'
      entity_id: 'sensor.unifi_gateway_firmware_upgradable'
      not_from: 'unavailable'
    action:
      if:
        condition: 'numeric_state'
        entity_id: 'sensor.unifi_gateway_firmware_upgradable'
        below: 1
      then:
        service: 'persistent_notification.dismiss'
        data:
          notification_id: 'unifi-firmware'
      else:
        service: 'persistent_notification.create'
        data:
          title: 'Unifi Firmware Updates Available'
          message: 'There are {{ trigger.to_state.state }} firmware updates available.'
          notification_id: 'unifi-firmware'
    mode: 'restart'

history:
  exclude:
    entity_globs:
      - 'sensor.unifi_gateway_*'
