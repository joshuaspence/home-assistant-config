---
title: 'Home Assistant'
icon: 'mdi:home-assistant'
path: 'hass'
cards:
  - type: 'entities'
    title: 'Home Assistant'
    icon: 'mdi:home-assistant'
    entities:
      - type: 'custom:template-entity-row'
        name: 'Areas'
        icon: 'mdi:home-search'
        state: >-
          {% set devices = states | map(attribute='entity_id') | map('device_id') | reject('none') | unique %}
          {% set ns = namespace(areas=[]) %}

          {% for device in devices %}
            {% set area = device_attr(device, 'area_id') %}
            {% if area not in ns.areas %}
              {% set ns.areas = ns.areas + [area] %}
            {% endif %}
          {% endfor %}

          {{ ns.areas | count }}
      - type: 'custom:template-entity-row'
        name: 'Automations'
        icon: 'mdi:robot'
        state: '{{ states.automation | count }}'
      - type: 'custom:template-entity-row'
        name: 'Binary Sensors'
        icon: 'mdi:checkbox-blank-circle-outline'
        state: '{{ states.binary_sensor | count }}'
      - type: 'custom:template-entity-row'
        name: 'Cameras'
        icon: 'mdi:video'
        state: '{{ states.camera | count }}'
      - type: 'custom:template-entity-row'
        name: 'HVACs'
        icon: 'mdi:thermostat'
        state: '{{ states.climate | count }}'
      - type: 'custom:template-entity-row'
        name: 'Covers'
        icon: 'mdi:window-open'
        state: '{{ states.cover | count }}'
      - type: 'custom:template-entity-row'
        name: 'Device Tracker'
        icon: 'mdi:crosshairs-gps'
        state: '{{ states.device_tracker | count }}'
      - type: 'custom:template-entity-row'
        name: 'Fans'
        icon: 'mdi:fan'
        state: '{{ states.fan | count }}'
      - type: 'custom:template-entity-row'
        name: 'Groups'
        icon: 'mdi:group'
        state: '{{ states.group | count }}'
      - type: 'custom:template-entity-row'
        name: 'Humidifiers'
        icon: 'mdi:air-humidifier'
        state: '{{ states.humidifier | count }}'
      - type: 'custom:template-entity-row'
        name: 'Lights'
        icon: 'mdi:lightbulb'
        state: '{{ states.light | count }}'
      - type: 'custom:template-entity-row'
        name: 'Locks'
        icon: 'mdi:lock'
        state: '{{ states.lock | count }}'
      - type: 'custom:template-entity-row'
        name: 'Media Players'
        icon: 'mdi:cast'
        state: '{{ states.media_player | count }}'
      - type: 'custom:template-entity-row'
        name: 'Persons'
        icon: 'mdi:account'
        state: '{{ states.person | count }}'
      - type: 'custom:template-entity-row'
        name: 'Scenes'
        icon: 'mdi:palette'
        state: '{{ states.scene | count }}'
      - type: 'custom:template-entity-row'
        name: 'Scripts'
        icon: 'mdi:script-text'
        state: '{{ states.script | count }}'
      - type: 'custom:template-entity-row'
        name: 'Sensors'
        icon: 'mdi:eye'
        state: '{{ states.sensor | count }}'
      - type: 'custom:template-entity-row'
        name: 'Switches'
        icon: 'mdi:light-switch'
        state: '{{ states.switch | count }}'
      - type: 'custom:template-entity-row'
        name: 'Vacuums'
        icon: 'mdi:robot-vacuum'
        state: '{{ states.vacuum | count }}'
      - type: 'custom:template-entity-row'
        name: 'Zones'
        icon: 'mdi:home'
        state: '{{ states.zone | count }}'

  - type: 'entities'
    title: 'Sensors'
    icon: 'mdi:eye'
    entities:
      - type: 'custom:template-entity-row'
        name: 'Battery'
        icon: 'mdi:battery'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "battery") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Connectivity'
        icon: 'mdi:server-network'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "connectivity") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Door'
        icon: 'mdi:door'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "door") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Humidity'
        icon: 'mdi:water-percent'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "humidity") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Illuminance'
        icon: 'mdi:brightness-5'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "illuminance") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Lock'
        icon: 'mdi:lock'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "lock") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Moisture'
        icon: 'mdi:cup-water'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "moisture") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Motion'
        icon: 'mdi:motion-sensor'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "motion") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Moving'
        icon: 'mdi:cursor-move'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "moving") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Occupancy'
        icon: 'mdi:home-outline'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "occupancy") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Opening'
        icon: 'mdi:open-in-app'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "opening") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Pressure'
        icon: 'mdi:gauge'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "pressure") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Problem'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "problem") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Temperature'
        icon: 'mdi:thermometer'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "temperature") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Vibration'
        icon: 'mdi:vibrate'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "vibration") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Window'
        icon: 'mdi:window-open'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "window") | list | count }}'

  - type: 'entities'
    entities:
      - entity: 'sensor.unavailable_devices'
      - type: 'attribute'
        entity: 'sensor.unavailable_devices'
        attribute: 'devices'

      - entity: 'sensor.unavailable_entities'
      - type: 'attribute'
        entity: 'sensor.unavailable_entities'
        attribute: 'entities'

  - type: 'custom:auto-entities'
    card:
      type: 'entities'
      title: 'Unavailable Entities'
      icon: 'mdi:server-network-off'
      show_header_toggle: false
    filter:
      include:
        - state: 'unavailable'
        - state: 'unknown'

  - type: 'custom:auto-entities'
    card:
      type: 'entities'
      title: 'Restored Entities'
      icon: 'mdi:restore-alert'
      show_header_toggle: false
    filter:
      include:
        - attributes:
            restored: true

  - type: 'custom:auto-entities'
    card:
      type: 'entities'
      title: 'Entities without Area'
      show_header_toggle: false
    filter:
      include:
        - domain: '*'
      exclude:
        - area: '*'
        - entity_id: 'binary_sensor.*_update_available'
        - entity_id: 'binary_sensor.josh_phone_*'
        - entity_id: 'binary_sensor.lily_phone_*'
        - entity_id: 'binary_sensor.remote_ui'
        - entity_id: 'binary_sensor.snapshots_stale'
        - entity_id: 'binary_sensor.workday'
        - entity_id: 'binary_sensor.zoom_atlassian'
        - entity_id: 'climate.aircon'
        - entity_id: 'media_player.all'
        - entity_id: 'sensor.*_newest_version'
        - entity_id: 'sensor.*_version'
        - entity_id: 'sensor.daikin_ac_inside_temperature'
        - entity_id: 'sensor.disk_use_percent'
        - entity_id: 'sensor.downstairs_*'
        - entity_id: 'sensor.hacs'
        - entity_id: 'sensor.inside_*'
        - entity_id: 'sensor.josh_phone_*'
        - entity_id: 'sensor.last_boot'
        - entity_id: 'sensor.lily_phone_*'
        - entity_id: 'sensor.memory_use_percent'
        - entity_id: 'sensor.myip'
        - entity_id: 'sensor.processor_use_percent'
        - entity_id: 'sensor.snapshot_backup'
        - entity_id: 'sensor.speedtest_*'
        - entity_id: 'sensor.unavailable_devices'
        - entity_id: 'sensor.unavailable_entities'
        - entity_id: 'sensor.unifi_gateway_'
        - entity_id: 'sensor.upstairs_*'
        - entity_id: 'sensor.uptime'
        - entity_id: 'switch.aircon_downstairs'
        - entity_id: 'switch.aircon_upstairs'
        - entity_id: 'switch.aircon_zone*'
        - domain: 'alarm_control_panel'
        - domain: 'automation'
        - domain: 'device_tracker'
        - domain: 'group'
        - domain: 'persistent_notification'
        - domain: 'person'
        - domain: 'scene'
        - domain: 'sun'
        - domain: 'vacuum'
        - domain: 'weather'
        - domain: 'zone'

        # Entities without a unique ID.
        - entity_id: 'humidifier.basement_dehumidifier'
        - entity_id: 'sensor.bathroom_humidity_statistics'

  - type: 'entity'
    entity: 'binary_sensor.remote_ui'

  - type: 'entities'
    title: 'Updates'
    entities:
      - 'binary_sensor.updater'
      - 'sensor.hacs'

  - type: 'entities'
    title: 'Snapshots'
    icon: 'mdi:backup-restore'
    entities:
      - entity: 'binary_sensor.snapshots_stale'
        name: 'Staleness'
      - entity: 'sensor.snapshot_backup'
        name: 'State'
