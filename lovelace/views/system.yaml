---
title: 'System'
icon: 'mdi:server-network'
path: 'system'
cards:
  - type: 'entities'
    entities:
      - entity: 'sensor.last_boot'
        format: 'relative'
      - entity: 'sensor.uptime'
        format: 'relative'

  - type: 'entities'
    title: 'Home Assistant'
    icon: 'mdi:home-assistant'
    entities:
      - type: 'custom:template-entity-row'
        name: 'Automations'
        icon: 'mdi:robot'
        state: '{{ states.automation | count }}'
      - type: 'custom:template-entity-row'
        name: 'Binary Sensors'
        icon: 'mdi:eye'
        state: '{{ states.binary_sensor | count }}'
      - type: 'custom:template-entity-row'
        name: 'Cameras'
        icon: 'mdi:video'
        state: '{{ states.camera | count }}'
      - type: 'custom:template-entity-row'
        name: 'HVACs'
        icon: 'mdi:thermostat'
        state: '{{ states.climate | count }}'
      - type: 'custom:template-entity-row'
        name: 'Covers'
        icon: 'mdi:window-open'
        state: '{{ states.cover | count }}'
      - type: 'custom:template-entity-row'
        name: 'Device Tracker'
        icon: 'mdi:crosshairs-gps'
        state: '{{ states.device_tracker | count }}'
      - type: 'custom:template-entity-row'
        name: 'Fans'
        icon: 'mdi:fan'
        state: '{{ states.fan | count }}'
      - type: 'custom:template-entity-row'
        name: 'Groups'
        state: '{{ states.group | count }}'
      - type: 'custom:template-entity-row'
        name: 'Humidifiers'
        state: '{{ states.humidifier | count }}'
      - type: 'custom:template-entity-row'
        name: 'Lights'
        icon: 'mdi:lightbulb'
        state: '{{ states.light | count }}'
      - type: 'custom:template-entity-row'
        name: 'Locks'
        icon: 'mdi:lock'
        state: '{{ states.lock | count }}'
      - type: 'custom:template-entity-row'
        name: 'Media Players'
        icon: 'mdi:cast'
        state: '{{ states.media_player | count }}'
      - type: 'custom:template-entity-row'
        name: 'Persons'
        icon: 'mdi:account'
        state: '{{ states.person | count }}'
      - type: 'custom:template-entity-row'
        name: 'Scenes'
        icon: 'mdi:palette'
        state: '{{ states.scene | count }}'
      - type: 'custom:template-entity-row'
        name: 'Scripts'
        icon: 'mdi:script-text'
        state: '{{ states.script | count }}'
      - type: 'custom:template-entity-row'
        name: 'Sensors'
        icon: 'mdi:eye'
        state: '{{ states.sensor | count }}'
      - type: 'custom:template-entity-row'
        name: 'Switches'
        icon: 'mdi:light-switch'
        state: '{{ states.switch | count }}'
      - type: 'custom:template-entity-row'
        name: 'Vacuums'
        icon: 'mdi:robot-vacuum'
        state: '{{ states.vacuum | count }}'
      - type: 'custom:template-entity-row'
        name: 'Zones'
        icon: 'mdi:home'
        state: '{{ states.zone | count }}'

  - type: 'entities'
    title: 'Sensors'
    icon: 'mdi:eye'
    entities:
      - type: 'custom:template-entity-row'
        name: 'Battery'
        icon: 'mdi:battery'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "battery") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Connectivity'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "connectivity") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Door'
        icon: 'mdi:door'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "door") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Humidity'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "humidity") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Illuminance'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "illuminance") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Lock'
        icon: 'mdi:lock'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "lock") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Moisture'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "moisture") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Motion'
        icon: 'mdi:motion-sensor'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "motion") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Moving'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "moving") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Occupancy'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "occupancy") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Opening'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "opening") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Pressure'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "pressure") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Problem'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "problem") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Temperature'
        icon: 'mdi:thermometer'
        state: '{{ states.sensor | selectattr("attributes.device_class", "eq", "temperature") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Vibration'
        icon: 'mdi:vibrate'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "vibration") | list | count }}'
      - type: 'custom:template-entity-row'
        name: 'Window'
        state: '{{ states.binary_sensor | selectattr("attributes.device_class", "eq", "window") | list | count }}'

  - type: 'entities'
    entities:
      - entity: 'sensor.unavailable_entities'
      - type: 'attribute'
        entity: 'sensor.unavailable_entities'
        attribute: 'entities'

  - type: 'custom:auto-entities'
    card:
      type: 'entities'
      title: 'Unavailable Entities'
      icon: 'mdi:server-network-off'
      show_header_toggle: false
    filter:
      include:
        - state: 'unavailable'
        - state: 'unknown'

  - type: 'custom:auto-entities'
    card:
      type: 'entities'
      title: 'Restored Entities'
      icon: 'mdi:restore-alert'
      show_header_toggle: false
    filter:
      include:
        - attributes:
            restored: true

  - type: 'entity'
    entity: 'binary_sensor.remote_ui'

  - type: 'entities'
    title: 'Updates'
    entities:
      - 'binary_sensor.updater'
      - 'sensor.hacs'

  - type: 'entities'
    title: 'Snapshots'
    icon: 'mdi:backup-restore'
    entities:
      - entity: 'binary_sensor.snapshots_stale'
        name: 'Staleness'
      - entity: 'sensor.snapshot_backup'
        name: 'State'

  - type: 'grid'
    title: 'Host'
    columns: 4
    cards:
      - type: 'gauge'
        entity: 'sensor.processor_use_percent'
        name: 'Processor'
      - type: 'gauge'
        entity: 'sensor.memory_use_percent'
        name: 'Memory'
      - type: 'gauge'
        entity: 'sensor.disk_use_percent'
        name: 'Disk'
      - type: 'gauge'
        entity: 'sensor.processor_temperature'
        name: 'Temperature'
        min: 20
        max: 80

  - type: 'grid'
    title: 'Network'
    columns: 3
    cards:
      - type: 'sensor'
        entity: 'sensor.speedtest_download'
        name: 'Download'
        graph: 'line'
      - type: 'sensor'
        entity: 'sensor.speedtest_upload'
        name: 'Upload'
        graph: 'line'
      - type: 'sensor'
        entity: 'sensor.speedtest_ping'
        name: 'Ping'
        graph: 'line'

  - type: 'entity'
    entity: 'sensor.myip'
    name: 'Public IP'

  - type: 'custom:zha-network-card'
    title: 'Zigbee Devices'
    sort_by: 'status'
    clickable: true
    columns:
      - name: 'Name'
        prop: 'name'
      - name: 'Status'
        attr: 'available'
        id: 'status'
        modify: 'x && "Online" || "Offline"'

      - name: 'Manufacturer'
        attr: 'manufacturer'
      - name: 'Model'
        attr: 'model'

      - name: 'IEEE'
        attr: 'ieee'
      - name: 'NWK'
        prop: 'nwk'
      - name: 'RSSI'
        attr: 'rssi'
      - name: 'LQI'
        attr: 'lqi'
      - name: 'Last Seen'
        attr: 'last_seen'
      - name: 'Type'
        attr: 'device_type'

      # See dmulcahey/zha-network-card#25.
      - name: 'Neighbours'
        attr: 'neighbors'
        modify: >-
          x.map((n, idx) => {
            let s = "";
            if (idx > 0) {
              s = "<br />";
            }
            s = s + n.relationship + " " + n.ieee;
            return s;
          });

  - type: 'custom:battery-state-card'
    title: 'Battery Levels'
    filter:
      include:
        - name: 'entity_id'
          value: '*_battery_level'
        - name: 'entity_id'
          value: '*_sensor_power'
        - name: 'attributes.device_class'
          value: 'battery'
    bulk_rename:
      - from: 'Battery Level'
        to: ''
      - from: 'Power'
        to: ''

  - type: 'entities'
    title: 'Unifi'
    icon: 'mdi:router-network'
    entities:
      - 'sensor.unifi_gateway_alerts'
      - 'sensor.unifi_gateway_lan'
      - 'sensor.unifi_gateway_vpn'
      - 'sensor.unifi_gateway_wlan'
      - 'sensor.unifi_gateway_www'

  - type: 'vertical-stack'
    title: 'Device Temperature'
    cards:
      - type: 'glance'
        entities: &device_temperature_entities
          - entity: 'sensor.bathroom_shelly_1_temperature'
            name: 'Bathroom Shelly 1'
          - entity: 'sensor.bathroom_shelly_2_temperature'
            name: 'Bathroom Shelly 2'
          - entity: 'sensor.toilet_shelly_temperature'
            name: 'Toilet Shelly'
      - type: 'history-graph'
        entities: *device_temperature_entities

  - type: 'custom:auto-entities'
    card:
      type: 'entities'
      title: 'Entities without Area'
      show_header_toggle: false
    filter:
      include:
        # - domain: 'binary_sensor'
        # - domain: 'climate'
        - domain: 'fan'
        - domain: 'light'
        - domain: 'media_player'
        # - domain: 'sensor'
        # - domain: 'switch'
      exclude:
        - area: '*'

        # Exclude entities without a unique ID.
        - entity_id: 'light.attic'
        - entity_id: 'light.hallway'
        - entity_id: 'light.living_room'
        - entity_id: 'light.outside_wall'
